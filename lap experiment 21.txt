>use invoice
switched to db invoice

1.Write a MongoDB query to sort customer details in ascending order of their name.

> db.customer.find().sort({name:1}).pretty()
{ "_id" : ObjectId("613861371ccb92fef4260407"), "name" : "rahul" }
{
        "_id" : ObjectId("613862f81ccb92fef426040b"),
        "name" : "sanjay",
        "address" : "silk-nagar",
        "city" : "kochi",
        "phno" : "456789123",
        "age" : "26"
}
{
        "_id" : ObjectId("613862ab1ccb92fef426040a"),
        "name" : "sona",
        "address" : "sai-nagar",
        "city" : "calicut",
        "phno" : "123456789",
        "age" : "52"
}
{
        "_id" : ObjectId("613862811ccb92fef4260409"),
        "name" : "vibin",
        "address" : "joli-nagar",
        "city" : "kannur",
        "phno" : "7894561230",
        "age" : "48"
}

2.Write a MongoDB query to count number of customers in each city.

> db.customer.aggregate({$group:{"_id":"$city",customer_count: {$sum:1}}})
{ "_id" : null, "customer_count" : 1 }
{ "_id" : "calicut", "customer_count" : 1 }
{ "_id" : "kannur", "customer_count" : 1 }
{ "_id" : "kochi", "customer_count" : 1 }

3.Write a MongoDB query to find minimum and maximum age in each city.

> db.customer.aggregate({$group:{"_id":"$city",min_age:{$min:"$age"},max_age:{$max:"$age"}}})
{ "_id" : null, "min_age" : null, "max_age" : null }
{ "_id" : "calicut", "min_age" : "52", "max_age" : "52" }
{ "_id" : "kannur", "min_age" : "48", "max_age" : "48" }
{ "_id" : "kochi", "min_age" : "26", "max_age" : "26" }